name: Benchmark

on:
  push:
    branches:
      - devel
  pull_request:
    branches:
      - devel

jobs:
  snapshotter:
    name: "Snapshotter"
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install nerdctl
        run: |
          VERSION="1.7.7" 
          wget https://github.com/containerd/nerdctl/releases/download/v$VERSION/nerdctl-full-$VERSION-linux-amd64.tar.gz
          sudo tar Cxzvvf /usr/local nerdctl-full-$VERSION-linux-amd64.tar.gz
          sudo systemctl enable --now containerd

      - name: Install cvmfs
        run: |
          sudo apt install lsb-release -y
          if [ ! -f /tmp/cvmfs-release-latest_all.deb ]; then
              wget https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb -O /tmp/cvmfs-release-latest_all.deb
          fi
          sudo dpkg -i /tmp/cvmfs-release-latest_all.deb
          sudo apt update
          sudo apt install -y cvmfs
          sudo cvmfs_config setup
          sudo sh -c "echo "CVMFS_HTTP_PROXY=DIRECT" > /etc/cvmfs/default.local"
          sudo sh -c "echo "CVMFS_DEBUGLOG=/tmp/cvmfs.log" >> /etc/cvmfs/default.local"
          sudo cvmfs_config reload

          sudo systemctl stop autofs
          sudo mkdir -p /cvmfs/unpacked.cern.ch
          sudo mount -t cvmfs unpacked.cern.ch /cvmfs/unpacked.cern.ch

      - name: Install cvmfs-snapshotter
        run: |
          cd snapshotter
          go mod tidy
          go build -o cvmfs_snapshotter
          sudo cp cvmfs_snapshotter /usr/local/bin/cvmfs_snapshotter
          sudo cp script/config/etc/systemd/system/cvmfs-snapshotter.service /etc/systemd/system/
          sudo mkdir -p /etc/containerd-cvmfs-grpc && sudo touch /etc/containerd-cvmfs-grpc/config.toml
          sudo tee /etc/containerd/config.toml > /dev/null <<EOL
          version = 2

          [plugins."io.containerd.grpc.v1.cri".containerd]
              snapshotter = "cvmfs-snapshotter"
              disable_snapshot_annotations = false

          [proxy_plugins]
              [proxy_plugins.cvmfs-snapshotter]
                  type = "snapshot"
                  address = "/run/containerd-cvmfs-grpc/containerd-cvmfs-grpc.sock"
          EOL

          sudo systemctl start cvmfs-snapshotter
          sudo systemctl restart containerd

          CVMFS_SOCK="/run/containerd-cvmfs-grpc/containerd-cvmfs-grpc.sock"
          if sudo test -S "$CVMFS_SOCK"; then
              echo "$CVMFS_SOCK exists."
          else
              echo "$CVMFS_SOCK does not exist."
              exit 1
          fi

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Run benchmark
        run: |
          python3 snapshotter/script/benchmark.py
